<h1>Homepage - View all our listings!</h1>
<hr>
<label for="searchListing">Search Listing:</label>
<input type="text" placeholder="Search Listings..." onkeyup="searchListingPage()" name="searchLisitng" id="searchListing">
<br><br>
<label for="filterSelect">Filter</label>
<select name="filterSelect" id="filterSelect">
  <option value="price">Price</option>
  <option value="volume">Volume</option>
  <option value="availability">Avalability</option>
</select>
<label for="filterFrom">From</label>
<input type="text" id="filterFrom" placeholder="Filter from">
<label for="filterTo">To</label>
<input type="text" id="filterTo" placeholder="Filter to">
<button id="filterButton" onclick="filter()">Filter</button>
<button onclick="resetFilter()">Reset filters</button>
<div>
  <p id="filterError"></p>
</div>

<label for="searchLocation">Search Location:</label>
<input type="text" placeholder="Search Location...press enter"  name="searchLocation" id="searchLocation">

<div>
{{#if noListings}}
<br><br>
<p>We currently have no listings! <a href="/listing/add">Add a listing now</a></p>
{{/if}}
</div>

<div class="sponsoredListings">
<p>Sponsored Listings:</p>
<ul class="sponsoredListings">
  {{#if noSponsoredListings}}
  <li>We currently have no sponsored listings! <a href="/profile">Go to your profile page to boost your listing! </a></li>
  {{/if}}
  {{#each sponsoredListings}}
    <li class="sponsoredListings">
      <h2><a href="/listing/{{this._id}}">{{this.title}}</a></h2>
      <p>{{this.description}}</p>
      <p>Price: ${{this.price}} per month</p>
      <p>Volume: {{this.volume}} cubic feet</p>
      <p>Start Date: {{this.listing_AvailableStartInput}}</p>
      <p>End Date: {{this.listing_AvailableEndInput}}</p>
      <p><img src="http://localhost:3000/data/uploads/{{this.image.[0]}}" alt="Listing Picture"></p>
      <p class="listingAvailableStartInput" hidden>{{this.listing_AvailableStartInput}}</p>
      <p class="listingAvailableEndInput" hidden>{{this.listing_AvailableEndInput}}</p>
    </li>
  {{/each}}
</ul>
</div>
<br><br>

<div id ="map_homepage"></div>
{{!-- <script src="https://maps.googleapis.com/maps/api/js"></script> --}}

<script type="module">
  let query_searched  = "";
  var textBox = document.getElementById("searchLocation");

    if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            
            var pos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var map = new google.maps.Map(document.getElementById('map_homepage'), {
              zoom: 14,
              center: pos
            });

      var icon = {
  url: "public/list_icon.png",
  scaledSize: new google.maps.Size(32, 32) // Set the desired scaled size
};
    
      var markerCurrent = new google.maps.Marker({
      position: pos,
      map: map,
      icon: icon
    });

    const infoWindow = new google.maps.InfoWindow({
        content: "<p> This is your current location</p>"
      });
      markerCurrent.addListener('click', function() {
      infoWindow.open(map, markerCurrent);
})    
      google.maps.event.addListener(map, 'storageListings', function() {
  map.setCenter(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
      })
  
  var markerPositions = []
  
  let lat = null
  let longs = null
  var listIds = []
  var title = []
    {{#each listings}}
         lat = {{this.latitude }}
         longs = {{ this.longitude }} 
        markerPositions.push ({position : {lat : lat, lng: longs}  });
        listIds.push("{{this._id}}".toString());
        title.push("{{this.title}}");

    {{/each}}


  // Loop through the markerPositions array and create a marker for each set of coordinates
  for (var i = 0; i < markerPositions.length; i++) {
    let marker = new google.maps.Marker({
      position: markerPositions[i].position,
      map: map,
      icon: markerPositions[i].icon,
      animation : google.maps.Animation.DROP

    });
     let infoWindow = new google.maps.InfoWindow({
        //content: `<p> Visit this listing :  <a href = "/listing/${listIds[i]}"> Link </a></p>`
        content : `<p> <a href="/listing/${listIds[i]}">${title[i]}</a>`
      });
      //infoWindow.open(map, marker);
      marker.addListener('click', function() {
      infoWindow.open(map, marker);
});

     }


     google.maps.event.addListenerOnce(map, 'tilesloaded', function() {
  map.setCenter(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
});
    
   }, function() {
            handleLocationError(true, infoWindow, map.getCenter());
          });
        } else {
          handleLocationError(false, infoWindow, map.getCenter());
        }
      

      function handleLocationError(browserHasGeolocation, infoWindow, pos) {
        var errorDiv = document.createElement('div');
        errorDiv.innerHTML = "Error: The Geolocation service failed. Your browser doesn't support geolocation.";
        document.body.appendChild(errorDiv);
      }

 textBox.addEventListener("keypress", function(event) {
  // Check if the key pressed is the "Enter" key (key code 13)
  if (event.keyCode === 13) {
    // Call the searchLocation() function
    searchLocation();
      }
});
function searchLocation() {
  // Get the search query from the text box
  var query = textBox.value;
  query_searched = query;
  var geocodingUrl = "https://maps.googleapis.com/maps/api/geocode/json?address=" + encodeURIComponent(query) + "&key=AIzaSyD9w7c6s9zaAOX2G2veo-nrwNZ0zZMCkHY";
  fetch(geocodingUrl)
  .then(function(response) {
    return response.json();
  })
  .then(function(data) {
    // Extract the latitude and longitude coordinates from the geocoding response
    var latitude = data.results[0].geometry.location.lat;
    var longitude = data.results[0].geometry.location.lng;
    var pos = {
              lat: latitude,
              lng: longitude
            };
            var map2 = new google.maps.Map(document.getElementById('map_homepage'), {
              zoom: 14,
              center: pos
            });
      
      var icon = {
  url: "public/list_icon.png",
  scaledSize: new google.maps.Size(32, 32) // Set the desired scaled size
};
    
      var markerCurrent = new google.maps.Marker({
      position: pos,
      map: map2,
      icon: icon
      })

      const newInfoWindow = new google.maps.InfoWindow({
        content: "<p> This is your current location</p>"
      });
      markerCurrent.addListener('click', function() {
      newInfoWindow.open(map2, markerCurrent);
});
      google.maps.event.addListener(map2, 'storageListings', function() {
  map.setCenter(new google.maps.LatLng(position.coords.latitude, position.coords.longitude));
      })

      
      var markerPositions = []
  
  let lat = null
  let longs = null
  var newListIds = []
  var newTitle = []


    {{#each listings}}
         lat = {{this.latitude }}
         longs = {{ this.longitude }}
        markerPositions.push ({position : {lat : lat, lng: longs } });
        newListIds.push("{{this._id}}".toString());
        newTitle.push("{{this.title}}");



    {{/each}}


  // Loop through the markerPositions array and create a marker for each set of coordinates
  for (var i = 0; i < markerPositions.length; i++) {
    let marker = new google.maps.Marker({
      position: markerPositions[i].position,
      map: map2,
      icon: markerPositions[i].icon,
      animation : google.maps.Animation.DROP

    });
     let infoWindow = new google.maps.InfoWindow({
        //content: `<p> Visit this listing :  <a href = "/listing/${listIds[i]}"> Link </a></p>`
        content : `<p> <a href="/listing/${newListIds[i]}">${newTitle[i]}</a>`
      });
      //infoWindow.open(map, marker);
      marker.addListener('click', function() {
      infoWindow.open(map2, marker);
});

     }


     google.maps.event.addListenerOnce(map2, 'tilesloaded', function() {
  map2.setCenter(new google.maps.LatLng(lat, lng));
});

    // Use the coordinates as needed
  })
  .catch(function(error) {
    console.log("Error geocoding address: " + error);
  });

}
     
</script>


<div>
<ul>
  {{#each listings}}
    <li class="homepageListings">
      <h2><a href="/listing/{{this._id}}">{{this.title}}</a></h2>
      <p>{{this.description}}</p>
      <p>Price: ${{this.price}} month</p>
      <p>Volume: {{this.volume}} cubic feet</p>
      <p class="listingPrice" hidden>{{this.price}}</p>
      <p>Start Date: {{this.listing_AvailableStartInput}}</p>
      <p>End Date: {{this.listing_AvailableEndInput}}</p>
      <p><img src="http://localhost:3000/data/uploads/{{this.image.[0]}}" alt="Listing Picture"></p>
      <p class="listingVolume" hidden>{{this.volume}}</p>
      <p class="listingAvailableStartInput" hidden>{{this.listing_AvailableStartInput}}</p>
      <p class="listingAvailableEndInput" hidden>{{this.listing_AvailableEndInput}}</p>
    </li>
  {{/each}}
</ul>

</div>

{{!-- <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD9w7c6s9zaAOX2G2veo-nrwNZ0zZMCkHY&callback=initMap"> --}}



